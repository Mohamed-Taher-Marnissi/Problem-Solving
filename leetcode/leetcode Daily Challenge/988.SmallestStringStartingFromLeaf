
struct TreeNode {
    int val;
    TreeNode *left;
    TreeNode *right;
    TreeNode() : val(0), left(nullptr), right(nullptr) {}
    TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
    TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 };
class Solution {
public:
    vector<string> words;
    void returnWords(TreeNode* root , string s) {
        if(!root) return;
        s += char(root->val + 'a');
        if(!root->left && !root->right) {
            reverse(s.begin() , s.end());
            words.push_back(s);
        }
        returnWords(root->left , s);
        returnWords(root->right, s);
    }
    string smallestFromLeaf(TreeNode* root) {
        returnWords(root , "");
        sort(words.begin() , words.end());
        return words[0];

    }
};
